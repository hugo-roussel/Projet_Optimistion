%% Exportation des données
[donnees,textes,lesdeux]=xlsread('Donnees_Projet_Optimisation.xlsx','Tableaux2et3et4');

p_min=donnees(:,4); % Puissance minimale 
p_max=donnees(:,5); % Puissance maximale
reservePos=donnees(:,6); % Capacité de réserve positive
reserveNeg=donnees(:,7); % Capacité de réserve négative
rampeUpRate=60*donnees(:,8); % Limite de variation de puissance UP
rampeDownRate=60*donnees(:,9); % Limite de variation de puissance DOWN
minimumUpTime=donnees(:,10); % Temps minimale de fonctionnement
minimumDownTime=donnees(:,11); % Temps minimale d'arrêt
OperationalCost=donnees(:,12); % Cout de fonctionnelent
ReserveCostPos=donnees(:,13); % Cout de réserve positive
ReserveCostNeg=donnees(:,14); % Cout de réserve négative
StartUpCost=donnees(:,15); % Cout de démarrage
global Pinit
Pinit=donnees(:,16); % Puissance production à l'instant initiale
global InitState
InitState=donnees(:,17); % Etat de fonctionnement à l'instant initiale
global InitLength 
InitLength=donnees(:,18); % Temps de fonctionnement ou d'arrêt à l'instant initiale
%% Structure du vecteur à optimiser
n(1)=12*24; % Relatif aux puissances
n(2)=12*24; % Relatif aux rampes
n(3)=12*24; % Relatif aux états de fonctionnement (Utile ? avec les puissances on peut les récup)
% x=zeros(1,sum(n));
x=randi([0 1],1,12*24)
% Les 12*24 premières colonnes seront dédiées aux puissances
% Les 12*24*2 aux réservePos et reserve Neg
%% Contraintes
% Matrice contraintes de rampes de puissances
global rampeUp24 rampeDown24
rampeUp24=[];
rampeDown24=[];
for i=1:12
    rampeUp24=[rampeUp24 ones(1,24)*rampeUpRate(i)];
    rampeDown24=[rampeDown24 ones(1,24)*rampeDownRate(i)];
end
rampeUp24=rampeUp24';
rampeDown24=rampeDown24';

% Récupérer le temps de fonctionnement 
"La fonction temps_fonctionnement s'en charge, utilisée dans les contraintes_NL";

% 




